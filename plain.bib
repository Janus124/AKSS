@InProceedings{CIVPaper,
  author     = {Lefeuvre, Hugo and Bădoiu, Vlad-Andrei and Chen, Yi and Huici, Felipe and Dautenhahn, Nathan and Olivier, Pierre},
  booktitle  = {Proceedings 2023 Network and Distributed System Security Symposium},
  title      = {Assessing the Impact of Interface Vulnerabilities in Compartmentalized Software},
  year       = {2023},
  publisher  = {Internet Society},
  series     = {NDSS 2023},
  collection = {NDSS 2023},
  doi        = {10.14722/ndss.2023.24117},
  url        = {http://dx.doi.org/10.14722/ndss.2023.24117},
}

@InProceedings{TEEPaper,
  author    = {Van Bulck, Jo and Oswald, David and Marin, Eduard and Aldoseri, Abdulla and Garcia, Flavio D. and Piessens, Frank},
  booktitle = {Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security},
  title     = {A Tale of Two Worlds: Assessing the Vulnerability of Enclave Shielding Runtimes},
  year      = {2019},
  address   = {New York, NY, USA},
  pages     = {1741–1758},
  publisher = {Association for Computing Machinery},
  series    = {CCS '19},
  abstract  = {This paper analyzes the vulnerability space arising in Trusted Execution Environments (TEEs) when interfacing a trusted enclave application with untrusted, potentially malicious code. Considerable research and industry effort has gone into developing TEE runtime libraries with the purpose of transparently shielding enclave application code from an adversarial environment. However, our analysis reveals that shielding requirements are generally not well-understood in real-world TEE runtime implementations. We expose several sanitization vulnerabilities at the level of the Application Binary Interface (ABI) and the Application Programming Interface (API) that can lead to exploitable memory safety and side-channel vulnerabilities in the compiled enclave. Mitigation of these vulnerabilities is not as simple as ensuring that pointers are outside enclave memory. In fact, we demonstrate that state-of-the-art mitigation techniques such as Intel's edger8r, Microsoft's "deep copy marshalling", or even memory-safe languages like Rust fail to fully eliminate this attack surface. Our analysis reveals 35 enclave interface sanitization vulnerabilities in 8 major open-source shielding frameworks for Intel SGX, RISC-V, and Sancus TEEs. We practically exploit these vulnerabilities in several attack scenarios to leak secret keys from the enclave or enable remote code reuse. We have responsibly disclosed our findings, leading to 5 designated CVE records and numerous security patches in the vulnerable open-source projects, including the Intel SGX-SDK, Microsoft Open Enclave, Google Asylo, and the Rust compiler.},
  doi       = {10.1145/3319535.3363206},
  isbn      = {9781450367479},
  keywords  = {trusted execution, tee, side-channels, memory safety, intel sgx},
  location  = {London, United Kingdom},
  numpages  = {18},
  url       = {https://doi.org/10.1145/3319535.3363206},
}

@Article{Trusted,
  author    = {Sackett, David L and Rosenberg, William M C and Gray, J A Muir and Haynes, R Brian and Richardson, W Scott},
  journal   = {BMJ},
  title     = {Evidence based medicine: what it is and what it isn{\textquoteright}t},
  year      = {1996},
  issn      = {0959-8138},
  number    = {7023},
  pages     = {71--72},
  volume    = {312},
  doi       = {10.1136/bmj.312.7023.71},
  eprint    = {https://www.bmj.com/content},
  publisher = {BMJ Publishing Group Ltd},
  url       = {https://www.bmj.com/content/312/7023/71},
}

@Misc{IntelSGX,
  author       = {Victor Costan and Srinivas Devadas},
  howpublished = {Cryptology ePrint Archive, Paper 2016/086},
  note         = {\url{https://eprint.iacr.org/2016/086}},
  title        = {Intel {SGX} Explained},
  year         = {2016},
  url          = {https://eprint.iacr.org/2016/086},
}

@InProceedings{Memory,
  author    = {Fleischer, Fabian and Busch, Marcel and Kuhrt, Phillip},
  booktitle = {Proceedings of the 15th International Conference on Availability, Reliability and Security},
  title     = {Memory corruption attacks within Android TEEs: a case study based on OP-TEE},
  year      = {2020},
  pages     = {1--9},
}

@Article{ASurvey,
  author   = {Antonio Muñoz and Ruben Ríos and Rodrigo Román and Javier López},
  journal  = {Computers & Security},
  title    = {A survey on the (in)security of trusted execution environments},
  year     = {2023},
  issn     = {0167-4048},
  pages    = {103180},
  volume   = {129},
  doi      = {https://doi.org/10.1016/j.cose.2023.103180},
  keywords = {Computer security, Secure hardware, Trusted execution environments, Hardware attacks, Software attacks, Side-channel attacks},
  url      = {https://www.sciencedirect.com/science/article/pii/S0167404823000901},
}

@Comment{jabref-meta: databaseType:bibtex;}
